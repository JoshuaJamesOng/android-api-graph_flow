buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }
}

wrapper {
    version = '3.5'
    distributionType = Wrapper.DistributionType.ALL
}

ext.isForPublish = (System.getenv('CI') &&
    System.getenv('TRAVIS_BRANCH') == "master" &&
    System.getenv('CI_PUBLISHING') &&
    System.getenv(('TRAVIS_PULL_REQUEST')) == "false")

task shouldPublish() {
    doLast {
        if (!isForPublish) {
            println "ci? ${System.getenv('CI')}"
            println "travis_branch? ${System.getenv('TRAVIS_BRANCH')}"
            println "ci_publishing? ${System.getenv('CI_PUBLISHING')}"
            println "travis_pull_request? ${System.getenv('TRAVIS_PULL_REQUEST')}"
            throw new GradleException('Dont publish. You cant like this.')
        }
    }
}

apply from: 'dependencies.gradle'

configure(subprojects.findAll { it.name != 'testapp' }) {
    apply plugin:'com.android.library'

    android {
        compileSdkVersion project.targetSdkVersion.toInteger()
        buildToolsVersion androidBuildToolsVersion
        defaultConfig {
            minSdkVersion project.minSdkVersion
            targetSdkVersion project.targetSdkVersion
            consumerProguardFiles 'proguard-rules.pro'
            versionName = project.versionName
        }
    }

    artifactName = project.name

    // Add a variable for knowing if its a publish or not
    ext.isForPublish = parent.isForPublish

    dependencies {
        testCompile test.junit
    }

    apply from: '../publish.gradle'
}

task clean(type:Delete) {
    delete rootProject.buildDir
}